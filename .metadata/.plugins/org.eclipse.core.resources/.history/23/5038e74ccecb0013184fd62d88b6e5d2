package com.positionsensor.app;

//import java.io.File;
//import java.io.FileNotFoundException;
import java.io.FileOutputStream;
//import java.io.IOException;
import java.util.ArrayList;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.wifi.WifiManager;
import android.os.IBinder;
import android.widget.Toast;

public class PositionsensorService extends Service {

	private ArrayList<String> net = new ArrayList<String>();

	private BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
		FileOutputStream ops;

		@Override
		public void onReceive(Context context, Intent intent) {
			Toast.makeText(getApplicationContext(), "Service restarted",
					Toast.LENGTH_LONG).show();
			if (broadcastReceiver != null) {
				IntentFilter intentFilter = new IntentFilter("ToService");
				registerReceiver(broadcastReceiver, intentFilter);
			}

			WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
			for (int i = 0; i < wifi.getScanResults().size(); i++) {
				String result = wifi.getScanResults().get(i).SSID + ", "
						+ wifi.getScanResults().get(i).BSSID + ","
						+ String.valueOf(wifi.getScanResults().get(i).level);
				net.add(result);
				//this.Write2File(context, ops, result);
			}

			sendBroadcast();
		}
/*
		private void Write2File(Context context, FileOutputStream ops,
				String msg) {
			try {
				context.getExternalFilesDir(null).mkdirs();
				File file = new File(context.getExternalFilesDir(null),
						"log.csv");
				ops = new FileOutputStream(file, true);
				ops.write(msg.getBytes());
				ops.close();
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}

		}*/

	};

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Toast.makeText(this, "Service started", Toast.LENGTH_LONG).show();

		// Filter initialisieren und Service registrieren
		if (broadcastReceiver != null) {
			IntentFilter intentFilter = new IntentFilter("ToService");
			registerReceiver(broadcastReceiver, intentFilter);
		}

		String result = null;
		WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
		for (int i = 0; i < wifi.getScanResults().size(); i++) {
			result = wifi.getScanResults().get(i).SSID + ", "
					+ wifi.getScanResults().get(i).BSSID + ","
					+ String.valueOf(wifi.getScanResults().get(i).level);
			net.add(result);
		}

		sendBroadcast();

		return START_STICKY;
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		Toast.makeText(this, "Service destroyed", Toast.LENGTH_LONG).show();
		unregisterReceiver(broadcastReceiver);
	}

	private void sendBroadcast() {
		Intent intent = new Intent();
		intent.setAction("ToActivity");
		for (int i = 0; i < net.size(); i++) {
			intent.putExtra("id" + String.valueOf(i + 1), net.get(i));
		}
		sendBroadcast(intent);
	}

	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}

}
