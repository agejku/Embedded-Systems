package com.positionsensor.app;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.wifi.WifiManager;
import android.os.IBinder;
import android.widget.Toast;

public class PositionsensorService extends Service {

	private ArrayList<String> net = new ArrayList<String>();
	
	private BroadcastReceiver serviceReceiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			Toast.makeText(getApplicationContext(), "Service restarted",
					Toast.LENGTH_LONG).show();
			if (serviceReceiver != null) {
				IntentFilter intentFilter = new IntentFilter("ToService");
				registerReceiver(serviceReceiver, intentFilter);
			}

			WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
			for (int i = 0; i < wifi.getScanResults().size(); i++) {
				net.add(wifi.getScanResults().get(i).SSID + ", "
						+ wifi.getScanResults().get(i).BSSID + ","
						+ String.valueOf(wifi.getScanResults().get(i).level));
			
			}
			
			sendBroadcast();
		}
	};

	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Toast.makeText(this, "Service started", Toast.LENGTH_LONG).show();

		// Filter initialisieren und Service registrieren
		if (serviceReceiver != null) {
			IntentFilter intentFilter = new IntentFilter("ToService");
			registerReceiver(serviceReceiver, intentFilter);
		}

		String result = null;
		WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
		for (int i = 0; i < wifi.getScanResults().size(); i++) {
			result = wifi.getScanResults().get(i).SSID + ", "
					+ wifi.getScanResults().get(i).BSSID + ","
					+ String.valueOf(wifi.getScanResults().get(i).level);
			net.add(result);
			this.writeDataToFile();
		}
		
	
		sendBroadcast();

		return START_STICKY;
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		Toast.makeText(this, "Service destroyed", Toast.LENGTH_LONG).show();
		unregisterReceiver(serviceReceiver);
	}

	private void sendBroadcast() {
		Intent intent = new Intent();
		intent.setAction("ToActivity");
		for (int i = 0; i < net.size(); i++) {
			intent.putExtra("id" + String.valueOf(i + 1), net.get(i));
		}
		sendBroadcast(intent);
	}
	
	public  void writeDataToFile (){	
		try {
			context.getExternalFilesDir(null).mkdirs();
			File file = new File(context.getExternalFilesDir(null), filename);
			outputStream = new FileOutputStream(file, true);
			outputStream.write(resultString.getBytes());
			outputStream.write("\n".getBytes());
			outputStream.close();
}
}
