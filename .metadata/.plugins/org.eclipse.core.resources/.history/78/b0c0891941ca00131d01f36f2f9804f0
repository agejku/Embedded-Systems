package com.positionsensor.app;

import java.util.ArrayList;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

public class MyService extends Service {

	private String id1, id2, id3;
	private int rssid1, rssid2, rssid3;
	
	private ArrayList<ScanResult> list = new ArrayList();
	
	private int stop = 0;
	
	// Strings to register to create intent filter for registering the receivers
	private static final String ACTION_STRING_SERVICE = "ToService";
	private static final String ACTION_STRING_ACTIVITY = "ToActivity";

	private BroadcastReceiver serviceReceiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			// Let it continue running until it is stopped.
			Toast.makeText(getApplicationContext(), "Service Started", Toast.LENGTH_LONG).show();
			Log.d("Service", "Broadcast in Service erhalten");
//			sendBroadcast();
		}
		
	};
	
	@Override
	public IBinder onBind(Intent arg0) {
		return null;
	}
	
//	@Override
//	public void onCreate() {
//		super.onCreate();
//		Log.d("Service", "onCreate");
//		// register the receiver
//		if (serviceReceiver != null) {
//			// Create an intent filter to listen to the broadcast sent with the action "ACTION_STRING_SERVICE"
//			IntentFilter intentFilter = new IntentFilter(ACTION_STRING_SERVICE);
//			// Map the intent filter to the receiver
//			registerReceiver(serviceReceiver, intentFilter);
//		}
//	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.d("Service", "onStartCommand");
		// Let it continue running until it is stopped.
		Toast.makeText(this, "Service Started", Toast.LENGTH_LONG).show();
		
		// register the receiver
		if (serviceReceiver != null) {
			// Create an intent filter to listen to the broadcast sent with the action "ACTION_STRING_SERVICE"
			IntentFilter intentFilter = new IntentFilter(ACTION_STRING_SERVICE);
			// Map the intent filter to the receiver
			registerReceiver(serviceReceiver, intentFilter);
		}

		// Start reading RSSI Values
		WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
		
		ScanResult result1 = wifi.getScanResults().get(0);
		list.add(result1);
		id1 = result1.BSSID;
		rssid1 = result1.level;
		
		ScanResult result2 = wifi.getScanResults().get(1);
		id2 = result2.BSSID;
		rssid2 = result2.level;
		
		ScanResult result3 = wifi.getScanResults().get(2);
		id3 = result3.BSSID;
		rssid3 = result3.level;

		sendBroadcast();
		
		return START_STICKY;
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		Log.d("Service", "onDestroy");
		Toast.makeText(this, "Service Destroyed", Toast.LENGTH_LONG).show();
		// Unregister the receiver
		unregisterReceiver(serviceReceiver);
	}
	
	// Send broadcast from activity to all receivers listening to the action "ACTION_STRING_ACTIVITY"
	private void sendBroadcast() {
		Intent intent = new Intent();
		intent.setAction(ACTION_STRING_ACTIVITY);
		intent.putExtra("id1", id1);
		intent.putExtra("rssid1", rssid1);
		intent.putExtra("id2", id2);
		intent.putExtra("rssid2", rssid2);
		intent.putExtra("id3", id3);
		intent.putExtra("rssid3", rssid3);
		sendBroadcast(intent);
	}
}
